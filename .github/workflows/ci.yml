name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
        
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
      
    - name: Install project
      run: poetry install --no-interaction
      
    - name: Run tests
      run: poetry run pytest --cov=tftassist --cov-report=xml
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        
    - name: Install dependencies
      run: poetry install --no-interaction
      
    - name: Build
      run: |
        poetry run pyinstaller --onefile --name tft-assist src/tftassist/__main__.py
        poetry run pyinstaller --onefile --name tft-assist-dxcam src/tftassist/__main__.py --add-data "src/tftassist;tftassist" --hidden-import dxcam
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: tft-assist
        path: |
          dist/tft-assist
          dist/tft-assist-dxcam
          
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          dist/tft-assist
          dist/tft-assist-dxcam
        generate_release_notes: true

  build-exe-win:
    needs: test
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: pip install poetry
      - run: poetry install --with dev
      - run: pyinstaller src/tftassist/__main__.py -n tft-assist.exe
      - uses: actions/upload-artifact@v4
        with:
          name: win-exe
          path: dist/tft-assist.exe 